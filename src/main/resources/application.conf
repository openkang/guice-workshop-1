akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"

  actor {
    #event handler will not process event until persist method is finish, so in case there will
    #be out of memory error, to keep it in a proper number.
    default-mailbox.stash-capacity = 100000
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  persistence {
    journal.plugin = "akka.persistence.journal.leveldb-shared"
    journal.leveldb-shared.store {
      # DO NOT USE 'native = off' IN PRODUCTION !!!
      native = off
      dir = "target/shared-journal"
    }
    snapshot-store.local.dir = "target/snapshots"
  }
  // use for non-cluster app
  //  persistence {
  //    view.auto-update-interval = 1s
  //    journal {
  //      plugin = "akka.persistence.journal.leveldb"
  //      leveldb.dir = "target/example/journal"
  //      leveldb.native = false
  //    }
  //    snapshot-store {
  //      plugin = "akka.persistence.snapshot-store.local"
  //      local.dir = "target/example/snapshots"
  //    }
  //  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s
  }
}


#event handler will not process event until persist method is finish, so in case there will
#be out of memory error, to keep it in a proper number.
akka.actor.default-mailbox.stash-capacity = 100000


blocking-dispatcher {
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 10
    core-pool-size-max = 10
  }
}